name: Setup Monitoring and Logging

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to set up monitoring for'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production

env:
  AZURE_FUNCTIONAPP_NAME_DEV: 'testpl-dev'
  AZURE_FUNCTIONAPP_NAME_STAGING: 'testpl-staging'
  AZURE_FUNCTIONAPP_NAME_PROD: 'testpl'

jobs:
  setup-monitoring:
    name: Setup Monitoring for ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set environment variables
        id: set-env-vars
        run: |
          if [ "${{ github.event.inputs.environment }}" == "development" ]; then
            echo "AZURE_FUNCTIONAPP_NAME=${{ env.AZURE_FUNCTIONAPP_NAME_DEV }}" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.environment }}" == "staging" ]; then
            echo "AZURE_FUNCTIONAPP_NAME=${{ env.AZURE_FUNCTIONAPP_NAME_STAGING }}" >> $GITHUB_ENV
          else
            echo "AZURE_FUNCTIONAPP_NAME=${{ env.AZURE_FUNCTIONAPP_NAME_PROD }}" >> $GITHUB_ENV
          fi

      - name: Setup Application Insights
        run: |
          # Check if Application Insights exists
          APPINSIGHTS_EXISTS=$(az monitor app-insights component show --app ${{ env.AZURE_FUNCTIONAPP_NAME }}-insights --resource-group rg-${{ env.AZURE_FUNCTIONAPP_NAME }} --query name -o tsv 2>/dev/null || echo "")
          
          if [ -z "$APPINSIGHTS_EXISTS" ]; then
            echo "Creating Application Insights for ${{ env.AZURE_FUNCTIONAPP_NAME }}"
            az monitor app-insights component create --app ${{ env.AZURE_FUNCTIONAPP_NAME }}-insights --resource-group rg-${{ env.AZURE_FUNCTIONAPP_NAME }} --location eastus
            
            # Get the instrumentation key
            INSTRUMENTATION_KEY=$(az monitor app-insights component show --app ${{ env.AZURE_FUNCTIONAPP_NAME }}-insights --resource-group rg-${{ env.AZURE_FUNCTIONAPP_NAME }} --query instrumentationKey -o tsv)
            
            # Configure Function App with Application Insights
            az functionapp config appsettings set --name ${{ env.AZURE_FUNCTIONAPP_NAME }} --resource-group rg-${{ env.AZURE_FUNCTIONAPP_NAME }} --settings \
              APPINSIGHTS_INSTRUMENTATIONKEY=$INSTRUMENTATION_KEY
          else
            echo "Application Insights for ${{ env.AZURE_FUNCTIONAPP_NAME }} already exists"
          fi

      - name: Setup Log Analytics Workspace
        run: |
          # Check if Log Analytics Workspace exists
          WORKSPACE_EXISTS=$(az monitor log-analytics workspace show --workspace-name ${{ env.AZURE_FUNCTIONAPP_NAME }}-workspace --resource-group rg-${{ env.AZURE_FUNCTIONAPP_NAME }} --query name -o tsv 2>/dev/null || echo "")
          
          if [ -z "$WORKSPACE_EXISTS" ]; then
            echo "Creating Log Analytics Workspace for ${{ env.AZURE_FUNCTIONAPP_NAME }}"
            az monitor log-analytics workspace create --workspace-name ${{ env.AZURE_FUNCTIONAPP_NAME }}-workspace --resource-group rg-${{ env.AZURE_FUNCTIONAPP_NAME }} --location eastus
            
            # Link Application Insights to Log Analytics Workspace
            WORKSPACE_ID=$(az monitor log-analytics workspace show --workspace-name ${{ env.AZURE_FUNCTIONAPP_NAME }}-workspace --resource-group rg-${{ env.AZURE_FUNCTIONAPP_NAME }} --query id -o tsv)
            
            az monitor app-insights component update --app ${{ env.AZURE_FUNCTIONAPP_NAME }}-insights --resource-group rg-${{ env.AZURE_FUNCTIONAPP_NAME }} --workspace $WORKSPACE_ID
          else
            echo "Log Analytics Workspace for ${{ env.AZURE_FUNCTIONAPP_NAME }} already exists"
          fi

      - name: Setup Azure Monitor Alerts
        run: |
          # Create alert for high CPU usage
          az monitor metrics alert create \
            --name "${{ env.AZURE_FUNCTIONAPP_NAME }}-high-cpu" \
            --resource-group rg-${{ env.AZURE_FUNCTIONAPP_NAME }} \
            --scopes /subscriptions/$(az account show --query id -o tsv)/resourceGroups/rg-${{ env.AZURE_FUNCTIONAPP_NAME }}/providers/Microsoft.Web/sites/${{ env.AZURE_FUNCTIONAPP_NAME }} \
            --condition "avg FunctionExecutionUnits > 80" \
            --window-size 5m \
            --evaluation-frequency 1m \
            --severity 2 \
            --description "Alert when CPU usage is high"
          
          # Create alert for high memory usage
          az monitor metrics alert create \
            --name "${{ env.AZURE_FUNCTIONAPP_NAME }}-high-memory" \
            --resource-group rg-${{ env.AZURE_FUNCTIONAPP_NAME }} \
            --scopes /subscriptions/$(az account show --query id -o tsv)/resourceGroups/rg-${{ env.AZURE_FUNCTIONAPP_NAME }}/providers/Microsoft.Web/sites/${{ env.AZURE_FUNCTIONAPP_NAME }} \
            --condition "avg MemoryWorkingSet > 1073741824" \
            --window-size 5m \
            --evaluation-frequency 1m \
            --severity 2 \
            --description "Alert when memory usage is high"
          
          # Create alert for HTTP server errors
          az monitor metrics alert create \
            --name "${{ env.AZURE_FUNCTIONAPP_NAME }}-http-errors" \
            --resource-group rg-${{ env.AZURE_FUNCTIONAPP_NAME }} \
            --scopes /subscriptions/$(az account show --query id -o tsv)/resourceGroups/rg-${{ env.AZURE_FUNCTIONAPP_NAME }}/providers/Microsoft.Web/sites/${{ env.AZURE_FUNCTIONAPP_NAME }} \
            --condition "count Http5xx > 5" \
            --window-size 5m \
            --evaluation-frequency 1m \
            --severity 1 \
            --description "Alert when HTTP server errors occur"

      - name: Setup Diagnostic Settings
        run: |
          # Enable diagnostic settings for the Function App
          az monitor diagnostic-settings create \
            --name "${{ env.AZURE_FUNCTIONAPP_NAME }}-diagnostics" \
            --resource /subscriptions/$(az account show --query id -o tsv)/resourceGroups/rg-${{ env.AZURE_FUNCTIONAPP_NAME }}/providers/Microsoft.Web/sites/${{ env.AZURE_FUNCTIONAPP_NAME }} \
            --workspace /subscriptions/$(az account show --query id -o tsv)/resourceGroups/rg-${{ env.AZURE_FUNCTIONAPP_NAME }}/providers/Microsoft.OperationalInsights/workspaces/${{ env.AZURE_FUNCTIONAPP_NAME }}-workspace \
            --logs '[{"category": "FunctionAppLogs", "enabled": true}, {"category": "FunctionExecutionLogs", "enabled": true}]' \
            --metrics '[{"category": "AllMetrics", "enabled": true}]'

      - name: Output monitoring information
        run: |
          echo "Monitoring setup complete for ${{ github.event.inputs.environment }}"
          echo "Application Insights: ${{ env.AZURE_FUNCTIONAPP_NAME }}-insights"
          echo "Log Analytics Workspace: ${{ env.AZURE_FUNCTIONAPP_NAME }}-workspace"
          echo "Alerts configured for CPU, memory, and HTTP errors" 